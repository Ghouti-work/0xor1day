{"posts":[{"title":"C_language","text":"BasicsBasic syntax and functions from the C programming language.Boilerplate Code 12345#include&lt;stdio.h&gt;int main(){return(0);} printf functionIt is used to show output on the screen 1printf(&quot;Hello World!&quot;); scanf functionIt is used to take input from the user 1scanf(&quot;placeholder&quot;, variables) CommentsA comment is the code that is not executed by the compiler, and the programmer uses it to keep track of the code.Single line comment 1// It's a single line comment Multi-line comment 1234/* It's amulti-linecomment*/ Data typesThe data type is the type of data Character typeTypically a single octet(one byte). It is an integer type 1char variable_name; Integer typeThe most natural size of integer for the machine 1int variable_name; Float typeA single-precision floating-point value 1float variable_name; Double typeA double-precision floating-point value 1double variable_name; Void typeRepresents the absence of the type 1void Escape SequencesIt is a sequence of characters starting with a backslash, and it doesn’t represent itself when used inside string literal. Alarm or BeepIt produces a beep sound 1\\a BackspaceIt adds a backspace 1\\b Form feed1\\f NewlineNewline Character 1\\n Carriage return1\\r TabIt gives a tab space 1\\t BackslashIt adds a backslash 1\\\\ Single quoteIt adds a single quotation mark 1\\' Question markIt adds a question mark 1\\? Octal No.It represents the value of an octal number 1\\nnn Hexadecimal No.It represents the value of a hexadecimal number 1\\nhh NullThe null character is usually used to terminate a string 1\\0 Conditional InstructionsConditional statements are used to perform operations based on some condition. If Statement1234if (/* condition */){/* code */} If-else Statement1234567if (/* condition */){/* code */}else{/* Code */} if else-if Statement123456789if (condition) {// Statements;}else if (condition){// Statements;}else{// Statements} Switch Case StatementIt allows a variable to be tested for equality against a list of values (cases). 12345678910111213switch (expression){case constant-expression:statement1;statement2;break;case constant-expression:statement;break;...default:statement;} Iterative StatementsIterative statements facilitate programmers to execute any block of code lines repeatedly and can be controlled as per conditions added by the programmer. while LoopIt allows execution of statement inside the block of the loop until the condition of loop succeeds. 1234while (/* condition */){/* code */} do-while loopIt is an exit controlled loop. It is very similar to the while loop with one difference, i.e., the body of the do-while loop is executed at least once even if the expression is false 12345do{/* code */} while (/* condition */); for loopIt is used to iterate the statements or a part of the program several times. It is frequently used to traverse the data structures like the array and linked list. 1234for (int i = 0; i &lt; count; i++){/* code */} Break Statementbreak keyword inside the loop is used to terminate the loop 1break; Continue Statementcontinue keyword skips the rest of the current iteration of the loop and returns to the starting point of the loop 1continue; Functions &amp; RecursionFunctions are used to divide an extensive program into smaller pieces. It can be called multiple times to provide reusability and modularity to the C program. Function Definition123return_type function_name(data_type parameter...){//code to be executed} RecursionRecursion is when a function calls a copy of itself to work on a minor problem. And the function that calls itself is known as the Recursive function. 123456void recurse(){... .. ...recurse();... .. ...} PointersPointer is a variable that contains the address of another variable, Declaration1datatype *var_name; ArraysAn array is a collection of data items of the same type. Declaration1data_type array_name[array_size]; Accessing element1int variable_name = array[index]; StringsA string is a 1-D character array terminated by a null character (‘\\0’) Declaration1char str_name[size]; gets() functionIt allows you to enter multi-word string 1gets(&quot;string&quot;); puts() functionIt is used to show string output 1puts(&quot;string&quot;); String Functions strlen()It is used to calculate the length of the string 1strlen(string_name); strcpy() functionIt is used to copy the content of second-string into the first string passed to it 1strcpy(destination, source); strcat() functionIt is used to concatenate two strings 1strcat(first_string, second_string); strcmp() functionIt is used to compare two strings 1strcmp(first_string, second_string); StructuresThe structure is a collection of variables of different types under a single name. Defining structure means creating a new data type. Structure syntax123456struct structureName{dataType member1;dataType member2;...}; typedef keywordtypedef function allows users to provide alternative names for the primitive and user-defined data types. 1234567typedef struct structureName{dataType member1;dataType member2;9/11Home - CodeWithHarry...}new_name; File HandlingA set of methods for handling File IO (read/write/append) in C language FILE pointer1FILE *filePointer; Opening a fileIt is used to open file in C. 1filePointer = fopen(fileName.txt, w) fscanf() functionIt is used to read the content of file. 1fscanf(FILE *stream, const char *format, ...) fprintf() functionIt is used to write content into the file. 1fprintf(FILE *fptr, const char *str, ...); fgetc() functionIt reads a character from a file opened in read mode. It returns EOF on reaching the end of file. 1fgetc(FILE *pointer); fputc() functionIt writes a character to a file opened in write mode 1fputc(char, FILE *pointer); Closing a fileIt closes the file. 1fclose(filePointer); Dynamic Memory AllocationA set of functions for dynamic memory allocation from the heap. These methods are used to use the dynamic memory which makes our C programs more efficient malloc() functionStands for ‘Memory allocation’ and reserves a block of memory with the given amount of bytes. 1ptr = (castType*) malloc(size); calloc() functionStands for ‘Contiguous allocation’ and reserves n blocks of memory with the given amount of bytes. 1ptr = (castType*)calloc(n, size); free functionIt is used to free the allocated memory. 1free(ptr); realloc() functionIf the allocated memory is insufficient, then we can change the size of previously allocated memory using this function for efficiency purposes 1ptr = realloc(ptr, x);","link":"/0xor1Day/2023/09/21/C-language/"},{"title":"hexo","text":"What is Hexo?Hexo is a fast, simple and powerful blog framework. You write posts in Markdown (or other markup languages) and Hexo generates static files with a beautiful theme in seconds. InstallationIt only takes a few minutes to set up Hexo. If you encounter a problem and can’t find the solution here, please submit a GitHub issue and we’ll help. RequirementsInstalling Hexo is quite easy and only requires the following beforehand:blbla Node.js (Should be at least Node.js 10.13, recommends 12.0 or higher) Git If your computer already has these, congratulations! You can skip to the Hexo installation step. If not, please follow the following instructions to install all the requirements. Install Git Windows: Download &amp; install git. Mac: Install it with Homebrew, MacPorts or installer. Linux (Ubuntu, Debian): sudo apt-get install git-core Linux (Fedora, Red Hat, CentOS): sudo yum install git-core For Mac users You may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install to install command line tools. Install Node.jsNode.js provides official installer for most platforms. Alternative installation methods: Windows: Install it with nvs (recommended) or nvm. Mac: Install it with Homebrew or MacPorts. Linux (DEB/RPM-based): Install it with NodeSource. Others: Install it through respective package manager. Refer to the guide provided by Node.js. nvs is also recommended for Mac and Linux to avoid possible permission issue. Windows If you use the official installer, make sure Add to PATH is checked (it’s checked by default). Mac / Linux If you encounter EACCES permission error when trying to install Hexo, please follow the workaround provided by npmjs; overriding with root/sudo is highly discouraged. Linux If you installed Node.js using Snap, you may need to manually run npm install in the target folder when initializing a blog. Install HexoOnce all the requirements are installed, you can install Hexo with npm: 1$ npm install -g hexo-cli Advanced installation and usageAdvanced users may prefer to install and use hexo package instead. 1$ npm install hexo Once installed, you can run Hexo in two ways: npx hexo &lt;command&gt; Linux users can set relative path of node_modules/ folder: 1echo 'PATH=&quot;$PATH:./node_modules/.bin&quot;' &gt;&gt; ~/.profile then run Hexo using hexo &lt;command&gt; Required Node.js versionIf you are stuck with older Node.js, you can consider installing a past version of Hexo. Please note we do not provide bugfixes to past versions of Hexo. We highly recommend to always install the latest version of Hexo and the recommended version of Node.js, whenever possible. Hexo version Minimum (Node.js version) Less than (Node.js version) 6.2+ 12.13.0 latest 6.0+ 12.13.0 18.5.0 5.0+ 10.13.0 12.0.0 4.1 - 4.2 8.10 10.0.0 4.0 8.6 8.10.0 3.3 - 3.9 6.9 8.0.0 3.2 - 3.3 0.12 unknown 3.0 - 3.1 0.10 or iojs unknown 0.0.1 - 2.8 0.10 unknown Once Hexo is installed, run the following commands to initialize Hexo in the target &lt;folder&gt;. 123$ hexo init &lt;folder&gt;$ cd &lt;folder&gt; $ npm install Once initialized, here’s what your project folder will look like: 12345678. ├── _config.yml ├── package.json ├── scaffolds ├── source | ├── _drafts | └── _posts └── themes _config.ymlSite configuration file. You can configure most settings here. package.jsonApplication data. The EJS, Stylus and Markdown renderers are installed by default. If you want, you can uninstall them later. package.json 12345678910111213141516171819{ &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: { &quot;version&quot;: &quot;&quot; }, &quot;dependencies&quot;: { &quot;hexo&quot;: &quot;^3.8.0&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;, &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;, &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;, &quot;hexo-server&quot;: &quot;^0.3.3&quot; } } scaffoldsScaffold folder. When you create a new post, Hexo bases the new file on the scaffold. sourceSource folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with _ (underscore) - except the _posts folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the public folder, while other files will simply be copied. ThemesTheme folder. Hexo generates a static website by combining the site contents with the theme.","link":"/0xor1Day/2023/09/21/hexo/"},{"title":"math","text":"This is an inline expression: \\(ax^2+bx+c=0\\). This is a block expression:$$\\displaystyle \\frac{1}{\\Bigl(\\sqrt{\\phi \\sqrt{5}}-\\phi\\Bigr) e^{\\frac25 \\pi}} =1+\\frac{e^{-2\\pi}} {1+\\frac{e^{-4\\pi}} {1+\\frac{e^{-6\\pi}}{1+\\frac{e^{-8\\pi}} {1+\\cdots} } } }$$ This is another block expression:\\[f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)e^{2 \\pi i \\xi x}d\\xi\\]","link":"/0xor1Day/2023/09/21/math/"}],"tags":[{"name":"C-language","slug":"C-language","link":"/0xor1Day/tags/C-language/"},{"name":"syntax","slug":"syntax","link":"/0xor1Day/tags/syntax/"},{"name":"hexo","slug":"hexo","link":"/0xor1Day/tags/hexo/"}],"categories":[{"name":"hexo_start","slug":"hexo-start","link":"/0xor1Day/categories/hexo-start/"}],"pages":[{"title":"","text":"[{\"name\":\"DASHENG-900x700-1.png\",\"date\":1518959551960},{\"name\":\"DASHENG-900x700-2.png\",\"date\":1518959599098},{\"name\":\"DASHENG-900x700-3.png\",\"date\":1518959609913},{\"name\":\"DASHENG-900x700-4.png\",\"date\":1518959618105}]","link":"/0xor1Day/hexo-admin-ehc-images.json"},{"title":"About","text":"hi my name is ghouti and i am student in cumpter scianse","link":"/0xor1Day/about/index.html"}]}